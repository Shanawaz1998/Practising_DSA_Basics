package LambdaExpression;

import java.util.Scanner;
import java.util.function.Predicate;

public class PredicatesExample {

//	Predicate is a inbuilt functional interface
//	present inside java.util.function pkg
//	test() is the abstract method present inside Predicate inteface 
	
//	public interface Predicate<T>{
//		public boolean test(T t)
//	}
	

	public static void main(String[] args) {
		
//		Q.1) To find whether the number is greater than 10 or not
		
//		Predicate<Integer> p = i -> i > 10;	//Internally it calls the test() method of Predicate interface
//		System.out.println(p.test(100));
//		System.out.println(p.test(5));
//		
//		Q.2) To find whether the number is even or not
//		Predicate<Integer> p1 = i -> i%2==0;
//		System.out.println(p1.test(2));
//		System.out.println(p1.test(3));
		
//		Q.3) To find whether the String starts with the letter 'K' or not
	
//		String str [] = {"Katrina", "Kajal", "sunny", "Kiara"};
//			Predicate<String> p = s1 -> s1.charAt(0) == 'K';
//			for(String st : str)
//			{
//				if(p.test(st))
//				{
//					System.out.println(st);
//				}
//			}
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the Username");
		String user = sc.next();
		System.out.println("Enter the Password");
		String pass = sc.next();
		PredicatesExample us = new PredicatesExample();
		Predicate<PredicatesExample> p = us -> us.user.equals("abc")
		
	}	
}
